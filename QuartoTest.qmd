---
title: "QuartoTest"
author: "Emré, Annaig, Saint-Clair, Marina et Mary"
date: today
engine: knitr
# title-block-banner: true ("#EEAEEE")
# title-block-banner: "#EEAEEE"
title-block-banner: true
format: 
   html: 
      theme: flatly
      code-fold: true
      number-sections: true
      chalkboard: true
      toc: true 
bibliography : biblio.bib
browser: true
---

# Tests sur Quarto

::: callout-note
Ces tests ont été réalisés à titre informatif
:::

Récupération des packages :

```{r}
library(tidyverse)
library(palmerpenguins)
```

```{r cars}
summary(cars)
```

::: {.callout-caution collapse="true"}
Il faut télécharger reticulate afin de pouvoir récupérer les valeurs de sortie d'une variable python depuis `R`.
:::

::: {.callout-caution collapse="true"}
## Expand To Learn About Collapse

This is an example of a 'folded' caution callout that can be expanded by the user. You can use `collapse="true"` to collapse it by default or `collapse="false"` to make a collapsible callout that is expanded by default.
:::

## Test des variables avec `R`

```{r, eval = TRUE}
a = 1:30
```

## Test des variables avec `Python`

```{python, eval = TRUE}
import numpy as np
print(r.a[0])
b = r.a[0] + 1

test = np.array([1,2,3])
print(b)
```

```{r, eval = TRUE}
c = reticulate::py$b + 5
print(c)
```

::: callout-tip
Je ne sais pas encore quoi mettre
:::

## Plots en R

```{r}
plot(cars)
```

```{python}
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

x = np.array(list(range(0,50)))
y = x * 2 * np.pi
plt.plot(x,y)
plt.show()

```

Test pour savoir si la bibliographie marche bien : [@kolditz12] ou alors comme ça directement @kolditz12. Pour changer la font des phrases : **je peux faire comme ça** ou alors *comme ça tout simplement*. [Je peux aussi mettre des choses dans la marge et ça c'est cool !]{.aside}

```{r}
# library(tidyverse)
tableTest <- read.table("Table_test.txt", header = T) %>% 
  drop_na() %>% 
  filter(Fonction == 'Halite1D')

head(tableTest)

```

Comme vous pouvez le voir, peut-être, j'ai `r nrow(tableTest)` lignes dans cette table[^1].

[^1]: Cette note permet de footnoter quelque chose

## Ajout d'images d'active learning :

::: {layout-ncol=2}
![Active learning -- 100 points](image0.png){#100pts} 

![Active learning -- 200 points](image.png){#200pts}
Active learning
:::

::: columns
::: {.column width="50%"}
On peut également faire un tableau de texte : couper la page en plusieurs parties (ici à la moitié), pour y insérer du texte en colonne.
:::

::: {.column width="50%"}
Et voici la deuxième moitié.

Le max est : `r max(tableTest$mesure)`
:::
:::

## Comparaison pipe natif et pipe maggritr

::: panel-tabset
### base de R

```{r, eval = FALSE}
tableTest |> select(mesure)

```

### maggritR

```{r, eval = FALSE}

tableTest %>% select(mesure)
```
:::

## Faire une liste

-   faire des étoiles comme ça

    -   et des plus après pour une sous liste
    -   et voilà

-   FINITO

Je peux faire référence aux figures également @200pts, comme dans un article finalement !

```{r}
# library(scales)
p_glob <- ggplot(tableTest, aes(x=Nb_points_observes, y = log10(valeur), colour = mesure))+
  geom_line(aes(linetype = mesure), size = 1.2) +
  scale_color_manual(values=c('darkorange2','lightskyblue3', 'green'))+
  xlab("Nombre de points PHREEQC") +
  ylab("Log des indicateurs") +
  ggtitle(paste0("Log des indicateurs en fonction de la methode utilisee et du nombre de points observes")) +
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5), axis.title.x = element_text(size=15), axis.title.y = element_text(size =15), 
        title= element_text(size=16),legend.text = element_text(size=12), axis.text.x = element_text(size=13), 
        plot.subtitle = element_text(hjust = 0.5, size = 13), axis.text.y = element_text(size=13), legend.key.width = unit(2,"cm"))
#| cap-location : margin 
p_glob
```

## Emplacement de notre ancien palace 

```{r}
#| coluln: screen-inset-shaded
library(leaflet)

# leaflet() %>%
#   addTiles() %>%  # Add default OpenStreetMap map tiles
#   addMarkers(lng=2.3476575, lat=48.8397733, popup="The birthplace of R")

leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
```

